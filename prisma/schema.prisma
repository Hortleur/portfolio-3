generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model experiences {
  id                                   String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                           DateTime @default(now()) @db.Timestamptz(6)
  title                                String?
  description                          String?
  image                                String?
  technos                              BigInt?
  technos_experiences_technosTotechnos technos? @relation("experiences_technosTotechnos", fields: [technos], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model formations {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  name           String?
  description    String?
  obtention_date DateTime? @db.Date
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model messages {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  sujet      String?
  contenu    String?
  email      String?
  nom        String?
  prenom     String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model technos {
  id                                       BigInt        @id @default(autoincrement())
  created_at                               DateTime      @default(now()) @db.Timestamptz(6)
  name                                     String?
  level                                    Int?          @db.SmallInt
  favorite                                 Boolean?
  iconName                                 String?
  color                                    String?
  experiences_experiences_technosTotechnos experiences[] @relation("experiences_technosTotechnos")
}
